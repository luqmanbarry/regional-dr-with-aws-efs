---
apiVersion: v1
kind: Deployment
metadata:
  labels:
    app: "{{ __mount_test_pod_name }}"
  name: "{{ __mount_test_pod_name }}"
  namespace: "{{ namespace }}"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: "{{ __mount_test_pod_name }}"
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "{{ __mount_test_pod_name }}"
    spec:
      containers:
        - name: "{{ __mount_test_pod_name }}"
          image: "image-registry.openshift-image-registry.svc:5000/openshift/nginx"
          env:
            - name: RW_TEST_PATH
              value:  "{{ __mount_test_path }}"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VOL_MOUNT_PATH
              value: "{{ __mount_test_path }}"
            - name: POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          command:
            - /bin/sh
            - -c
            - |
              mkdir -p ${VOL_MOUNT_PATH}/${RW_TEST_PATH}
              for i in {1..100}; 
              do
                dd if=/dev/urandom of=${VOL_MOUNT_PATH}/${RW_TEST_PATH}/${NODE_NAME}_${POD_NAME}_static-pv-${i}.log bs=1M count=50;
              done
              
              while true; 
              do 
                DATA_DIR=${VOL_MOUNT_PATH}/${RW_TEST_PATH}/$(date +"%Y%m%d%H")_POD_${POD_NAME}_NODE_${NODE_NAME};
                mkdir -p ${DATA_DIR};
                output="$(date +"%Y-%m-%d_%H-%M-%S-%3N")"; 
                file_name="static-pv-$(date +"%m%d%Y-T%H%M").log";
                echo "Current Timestamp: ${output}";
                echo "Written on: ${output}" >> ${DATA_DIR}/${file_name};
                sleep 1; 
              done
          
          volumeMounts:
            - name: "{{ __mount_test_pod_name }}"
              mountPath: "{{ __mount_test_path }}"
      volumes:
        - name: "{{ __mount_test_pod_name }}"
          persistentVolumeClaim:
            claimName: "{{ pvc_name }}"
      terminationGracePeriodSeconds: 20